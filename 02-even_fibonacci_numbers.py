""" Problem:
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def get_fibonacci(max_size=4000000):
    """ Build list of Fibonacci numbers that do not exceed 4 million """
    fib = [1, 2]
    while (True):
        if fib[-2] + fib[-1] <= 4000000:
            fib += [fib[-2] + fib[-1]]
        else:
            break

    return fib


def get_evens(lst):
    """ Returns a list of only even numbers from lst """
    out = []
    for val in lst:
        if val % 2 == 0:
            out += [val]

    return out


if __name__ == '__main__':
    even_fib = get_evens(get_fibonacci())

    print(sum(even_fib))
